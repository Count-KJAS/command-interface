@keyframes glitch-zoom {
  0% {
	filter: blur(4px);
	transform: scale(1) translate(0, 0) skew(0deg);
  }
  7% {
	transform:  scale(1) translate(0, 0) skew(0deg);
  }
  8% {
	transform:  scale(1.2) translate(-20px, 30px) skew(0deg);
  }
  11% {
	transform:  scale(1.2) translate(-20px, 30px) skew(0deg);
  }
  12% {
	transform:  scale(0) translate(0,0) skew(0deg);
  }
  32% {
	transform: skew(0deg);
  }
  41% {
	transform: skew(0deg);
  }
  67% {
	transform:  scale(1) translate(0, 0) skew(0deg);
  }
  68% {
	transform:  scale(1.2) translate(50px, 35px) skew(0deg);
  }
  71% {
	transform:  scale(1.2) translate(50px, 35px) skew(0deg);
  }
  72% {
	transform:  scale(0) translate(0,0) skew(0deg);
  }
  100% {
	transform: skew(0deg);
	filter: blur(0px);
  }
}


// spazz effect : https://codepen.io/noahblon/pen/wKvvxX

$filters: (
		saturate: (
				units: '',
				range: (
						min: 1,
						max: 10
				),
				probability: 1/5
		),
		hue-rotate: (
				units: 'deg',
				probability: 1,
				range: (
						min: 0,
						max: 360
				),
		),
		invert: (
				units: '',
				probability: 1/30,
				range: (
						min: 1,
						max: 1
				),
		),
		contrast: (
				units: '',
				probability: 1/10,
				range: (
						min: 1,
						max: 10
				),
		),
		brightness: (
				units: '%',
				probability: 1/20,
				range: (
						min: 25,
						max: 75
				),
		)
);

@keyframes spazz {
  @for $i from 0 through 100 {
	@if(random(100) < 66.6) {
	  #{$i}% {
		$filter_css_value: '';
		@each $filter, $filter_props in $filters {
		  @if((random(100) / 100) < map-get($filter_props, probability)) {
			$range: map-get($filter_props, range);
			$min: map-get($range, min);
			$max: map-get($range, max);
			$filter_css_value: $filter_css_value + ' #{$filter}(#{random(100) / 100 * ($max - $min) + $min}#{map-get($filter_props, units)})';
		  }
		}
		filter: unquote($filter_css_value);
		background-color: hsl(random(360), 100%, 70%);
		transform: translate(#{random(30) - 15}px, #{random(30) - 15}px) scale(random(20) / 100 + 1.05);
	  }
	}
  }
}
